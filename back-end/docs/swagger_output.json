{
  "openapi": "3.0.0",
  "info": {
    "version": "v0.0.1",
    "title": "Dokumentasi API VIVLIO",
    "description": "Dokumentasi API untuk aplikasi VIVLIO yang mencakup otentikasi pengguna dan manajemen akun."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local Server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register new user",
        "description": "Mendaftarkan user baru dengan nama lengkap, email, dan password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad Request (e.g. validasi gagal)"
          }
        }
      }
    },
    "/auth/verify-email": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify user email with OTP code",
        "description": "Mengverifikasi email pengguna berdasarkan kode OTP yang dikirimkan ke email.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailRequest"
              },
              "example": {
                "email": "user@example.com",
                "verificationCode": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email berhasil diverifikasi",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": { "type": "string" },
                        "verifiedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "example": {
                    "message": "Email successfully verified",
                    "data": {
                      "email": "user@example.com",
                      "verifiedAt": "2025-06-05T15:30:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g. OTP salah atau kedaluwarsa)"
          },
          "403": {
            "description": "Forbidden (e.g. email tidak ditemukan)"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Melakukan login dengan username/email dan password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login berhasil",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "token": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "identifier": { "type": "string" },
                        "role": { "type": "string" }
                      }
                    }
                  },
                  "example": {
                    "message": "Login successful",
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "data": {
                      "identifier": "ahmadherkal",
                      "role": "USER"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (e.g. data login tidak lengkap)"
          },
          "403": {
            "description": "Forbidden (e.g. kredensial salah)"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get user profile",
        "description": "Mengambil data profil pengguna berdasarkan token yang dikirimkan.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden (e.g. token tidak valid)"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "required": ["identifier", "password"],
        "properties": {
          "identifier": {
            "type": "string",
            "example": "ahmadherkal"
          },
          "password": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "fullName",
          "username",
          "email",
          "password",
          "confirmPassword"
        ],
        "properties": {
          "fullName": { "type": "string", "example": "Hera Cles" },
          "username": { "type": "string", "example": "heracles" },
          "email": {
            "type": "string",
            "format": "email",
            "example": "hera@example.com"
          },
          "password": { "type": "string", "example": "123456" },
          "confirmPassword": { "type": "string", "example": "123456" }
        }
      },
      "VerifyEmailRequest": {
        "type": "object",
        "required": ["email", "verificationCode"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "verificationCode": {
            "type": "string",
            "example": "123456"
          }
        }
      }
    }
  }
}
